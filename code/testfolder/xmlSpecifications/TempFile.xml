<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<source>
	<classdefinition>
		<name>Class1</name>
		<extends>
			<entry>Class3</entry>
		</extends>
		<implements>
			<entry>If1</entry>
			<entry>If2</entry>
		</implements>
		<composition>
			<entry>Class2</entry>
		</composition>
		<agregation>
			<entry>Class4</entry>
			<entry>Class5</entry>
		</agregation>
		<instance>
			<name>classInstance1</name>
			<class>Class2</class>
		</instance>
		<instance>
			<name>classInstance2</name>
			<class>Class2</class>
		</instance>
		<methoddefinition>
			<name>method1</name>
			<parameters>
				<entry>
					<type>int</type>
					<name>param1</name>
				</entry>
				<entry>
					<type>int</type>
					<name>param2</name>
				</entry>
			</parameters>
			<result>int</result>
			<alternative>
				<case>
					<condition>if(a!=b)</condition>
					<methodcall>
						<method>classInstance1</method>
						<instance>call1</instance>
					</methodcall>
				</case>
				<case>
					<condition>else</condition>
					<loop>
						<condition>for(int i=0; i!=100; i++)</condition>
						<methodcall>
							<method>Class2</method>
							<instance>call2</instance>
						</methodcall>
					</loop>
				</case>
			</alternative>
			<methodcall>
				<method>this</method>
				<instance>method2</instance>
			</methodcall>
		</methoddefinition>
		<methoddefinition>
			<name>method2</name>
			<alternative>
				<case>
					<condition>switch(i)/case 0</condition>
					<something>
						int j=10;
						while(j!=0)
						{
						meth
						<loop>
							<condition>while(j!=0)</condition>
							<methodcall>
								<method>method3</method>
							</methodcall>
						</loop>
					</something>
				</case>
				<case>
					<condition>switch(i)/case 1</condition>
					<something>
						int j=10;
						do
						{
						method3();
						<loop>
							<condition>do/while(j!=0)</condition>
							<methodcall>
								<method>method3</method>
							</methodcall>
						</loop>
					</something>
				</case>
				<case>
					<condition>switch(i)/default</condition>
					<something>
						Class2 classInstance3 = new Class2();
						<methodcall>
							<method>Class2</method>
						</methodcall>
						<methodcall>
							<method>Class3</method>
						</methodcall>
						<methodcall>
							<method>classInstance1</method>
							<instance>call1</instance>
						</methodcall>
						<methodcall>
							<method>this</method>
							<instance>classInstance1</instance>
						</methodcall>
						<methodcall>
							<method>classInstance2</method>
							<instance>call1</instance>
						</methodcall>
						<methodcall>
							<method>classInstance3</method>
							<instance>call1</instance>
						</methodcall>
						<methodcall>
							<method>classInstance4</method>
							<instance>callX</instance>
						</methodcall>
					</something>
				</case>
			</alternative>
		</methoddefinition>
		<methoddefinition>
			<name>method3</name>
			<alternative>
				<case>
					<condition>if(a!=b)</condition>
					<methodcall>
						<method>method3</method>
					</methodcall>
				</case>
			</alternative>
			<alternative>
				<case>
					<condition>if(b!=c)</condition>
					<methodcall>
						<method>method4</method>
					</methodcall>
				</case>
			</alternative>
		</methoddefinition>
		<methoddefinition>
			<name>method4</name>
			<alternative>
				<case>
					<condition>if(d!=e)</condition>
					<methodcall>
						<method>method3</method>
					</methodcall>
				</case>
			</alternative>
		</methoddefinition>
	</classdefinition>
	<classdefinition>
		<name>Class2</name>
		<composition />
		<agregation />
		<methoddefinition>
			<name>call1</name>
		</methoddefinition>
		<methoddefinition>
			<name>call2</name>
		</methoddefinition>
	</classdefinition>
	<classdefinition>
		<name>Class3</name>
		<composition />
		<agregation />
		<methoddefinition>
			<name>call1</name>
		</methoddefinition>
	</classdefinition>
	<classdefinition>
		<name>Class4</name>
		<composition />
		<agregation />
	</classdefinition>
	<classdefinition>
		<name>Class5</name>
		<composition />
		<agregation />
	</classdefinition>
	<interfacedefinition>
		<name>If1</name>
		<composition />
		<agregation />
		<methoddefinition>
			<name>method1</name>
			<parameters>
				<entry>
					<type>int</type>
					<name>param1</name>
				</entry>
				<entry>
					<type>int</type>
					<name>param2</name>
				</entry>
			</parameters>
			<result>int</result>
		</methoddefinition>
	</interfacedefinition>
	<interfacedefinition>
		<name>If2</name>
		<composition />
		<agregation />
		<methoddefinition>
			<name>method2</name>
		</methoddefinition>
	</interfacedefinition>
</source>
