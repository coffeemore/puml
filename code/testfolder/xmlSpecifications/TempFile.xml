<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<source>
	<classdefinition>
		<name>Class1</name>
		<extends>
			<entry>Class3</entry>
		</extends>
		<implements>
			<entry>If1</entry>
			<entry>If2</entry>
		</implements>
		<compositions>
			<entry>Class2</entry>
			<entry>Class3</entry>
		</compositions>
		<aggregations>
			<entry>Class4</entry>
			<entry>Class5</entry>
		</aggregations>
		<instance>
			<access>private</access>
			<name>classInstance1</name>
			<class>Class2</class>
		</instance>
		<instance>
			<access>protected</access>
			<name>classInstance2</name>
			<class>Class2</class>
		</instance>
		<instance>
			<access>public</access>
			<name>iClass4</name>
			<class>Class4</class>
		</instance>
		<instance>
			<access>pprivate</access>
			<name>iClass5</name>
			<class>Class5</class>
		</instance>
		<var>
			<access>private</access>
			<type>int</type>
			<name>var1</name>
		</var>
		<var>
			<access>protected</access>
			<type>double</type>
			<name>var2</name>
		</var>
		<var>
			<access>public</access>
			<type>short</type>
			<name>var3</name>
		</var>
		<var>
			<type>byte</type>
			<name>var4</name>
			<access>pprivate</access>
		</var>
		<methoddefinition>
			<access>public</access>
			<name>Class1</name>
			<parameters>
				<entry>
					<type>Class4</type>
					<name>iClass4</name>
				</entry>
				<entry>
					<type>Class5</type>
					<name>iClass5</name>
				</entry>
			</parameters>
		</methoddefinition>
		<methoddefinition>
			<access>private</access>
			<name>method1</name>
			<parameters>
				<entry>
					<type>int</type>
					<name>param1</name>
				</entry>
				<entry>
					<type>int</type>
					<name>param2</name>
				</entry>
			</parameters>
			<result>int</result>
			<alternative>
				<case>
					<condition>if(a!=b)</condition>
					<methodcall>
						<method>call1</method>
						<instance>classInstance1</instance>
					</methodcall>
				</case>
				<case>
					<condition>else</condition>
					<loop>
						<condition>for(int i=0; i!=100; i++)</condition>
						<methodcall>
							<method>call2</method>
							<instance>Class2</instance>
						</methodcall>
					</loop>
				</case>
			</alternative>
			<methodcall>
				<method>method2</method>
			</methodcall>
		</methoddefinition>
		<methoddefinition>
			<access>protected</access>
			<name>method2</name>
			<result>void</result>
			<alternative>
				<case>
					<condition>switch(i)/case 0</condition>
					<frame>
						<loop>
							<condition>while(j!=0)</condition>
							<methodcall>
								<method>method3</method>
							</methodcall>
						</loop>
					</frame>
				</case>
				<case>
					<condition>switch(i)/case 1</condition>
					<frame>
						<loop>
							<condition>do/while(j!=0)</condition>
							<methodcall>
								<method>method3</method>
							</methodcall>
						</loop>
					</frame>
				</case>
				<case>
					<condition>switch(i)/default</condition>
					<frame>
						<instance>
							<access>pprivate</access>
							<name>classInstance3</name>
							<class>Class2</class>
						</instance>
						<instance>
							<access>pprivate</access>
							<name>classInstance1</name>
							<class>Class3</class>
						</instance>
						<methodcall>
							<method>call1</method>
							<instance>classInstance1</instance>
						</methodcall>
						<methodcall>
							<method>call1</method>
							<instance>classInstance1</instance>
							<validity>class</validity>
						</methodcall>
						<methodcall>
							<method>call1</method>
							<instance>classInstance2</instance>
						</methodcall>
						<methodcall>
							<method>call1</method>
							<instance>classInstance3</instance>
						</methodcall>
						<methodcall>
							<method>callX</method>
							<instance>classInstance4</instance>
						</methodcall>
					</frame>
				</case>
			</alternative>
		</methoddefinition>
		<methoddefinition>
			<access>public</access>
			<name>method3</name>
			<result>void</result>
			<alternative>
				<case>
					<condition>if(a!=b)</condition>
					<methodcall>
						<method>method3</method>
					</methodcall>
				</case>
			</alternative>
			<alternative>
				<case>
					<condition>if(b!=c)</condition>
					<methodcall>
						<method>method4</method>
					</methodcall>
				</case>
			</alternative>
		</methoddefinition>
		<methoddefinition>
			<access>pprivate</access>
			<name>method4</name>
			<result>void</result>
			<alternative>
				<case>
					<condition>if(d!=e)</condition>
					<methodcall>
						<method>method3</method>
					</methodcall>
				</case>
			</alternative>
		</methoddefinition>
	</classdefinition>
	<classdefinition>
		<name>Class2</name>
		<compositions />
		<aggregations />
		<methoddefinition>
			<access>public</access>
			<name>call1</name>
			<result>void</result>
		</methoddefinition>
		<methoddefinition>
			<access>public</access>
			<name>call2</name>
			<type>static</type>
			<result>void</result>
		</methoddefinition>
	</classdefinition>
	<classdefinition>
		<name>Class3</name>
		<compositions />
		<aggregations />
		<methoddefinition>
			<access>public</access>
			<name>call1</name>
			<result>void</result>
		</methoddefinition>
	</classdefinition>
	<classdefinition>
		<name>Class4</name>
		<compositions />
		<aggregations />
	</classdefinition>
	<classdefinition>
		<name>Class5</name>
		<compositions />
		<aggregations />
	</classdefinition>
	<interfacedefinition>
		<name>If1</name>
		<compositions />
		<aggregations />
		<methoddefinition>
			<access>public</access>
			<name>method1</name>
			<parameters>
				<entry>
					<type>int</type>
					<name>param1</name>
				</entry>
				<entry>
					<type>int</type>
					<name>param2</name>
				</entry>
			</parameters>
			<result>int</result>
		</methoddefinition>
	</interfacedefinition>
	<interfacedefinition>
		<name>If2</name>
		<compositions />
		<aggregations />
		<methoddefinition>
			<access>public</access>
			<name>method2</name>
			<result>void</result>
		</methoddefinition>
	</interfacedefinition>
</source>